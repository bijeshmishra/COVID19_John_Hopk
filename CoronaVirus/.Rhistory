install.packages(c("foreign", "lattice", "nlme", "nnet", "survival"))
S := solve([y - 6*a - 9*b +0.2*a^2 +0.3*b^2 - 0.4*a*b = 0,(0.4*s*b + 0.6*r*b + 6*s -9*r)/(0.4*r + 0.4*s) = a], [b])
y = a1*x1 + a2*x2 + b1*x1^2 + b2*x2^2 + c1*x1*x2 + d
d = 0
a1 = 6
a2 = 9
b1 = -0.2
b2 = -0.3
c1 = 0.4
d = 0
y = a1*x1 + a2*x2 + b1*x1^2 + b2*x2^2 + c1*x1*x2 + d
x1 = (0.4*x2*r2 + 0.6*r1*x2 + 6*r2 - 9*r1)/(0.4*r1 +0.4*r2)
y = a1*x1 + a2*x2 + b1*x1^2 + b2*x2^2 + c1*x1*x2 + d
?diff
install.packages(calculus)
install.packages(calculus)
install.packages("calculus")
library(calculus)
?calculsu
?calculus
??calculus
install.packages("optimization")
?optimization
??optimize
f = makeFun(x^2+y ~ x&y)
g = makeFun(x^2-y^2 ~ x&y)
install.packages(c("dplyr", "tidyverse"))
source('~/Downloads/Data Incubator/Challenge3.R')
first_payment = select(N)
source('~/Downloads/Data Incubator/Challenge3.R')
install.packages("lpSolve")
?lpsolve
lpSolve
?lpSolve
# Final Solution
prod.sol$solutionhe
obj.fun <- c(-2000,5000)
# Install and Load Library
library(lpSolve)
# Matrix of 2*5 to make the equations
constr <- matrix(c(1,0,0,1,1,0,0,1,1,1), ncol = 2,byrow = TRUE)
# Direction of each euation
constr.dir <- c(">=",">=","<=","<=",">=")
# Right-Hand--Side of the equation
rhs <- c(100,80,200,170,200)
prod.sol <- lp("max",obj.fun,constr,constr.dir,rhs,compute.sens = TRUE)
# Final Solution
prod.sol$solutionhe
install.packages(c("dplyr", "tidyverse"))
library(tibble)
library(dbplyr)
# learn-github
A repository created for learning github.
Just a tutorial to learn github
github
?github
??github
install.packages("callr")
library(calculus)
library(calculus)
?calculus
install.packages(calculus)
install.packages(calculus)
library(calculus)
a1 = 6
a2 = 9
b1 = -0.2
b2 = -0.3
c1 = 0.4
a = 0
f = a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a
f = a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a
library(calculus)
install.packages(calculus)
?calculus
??calculus
calculus
calculus::c2e()
y = function(a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a)
?function
help funciton
derivative(
f,
var = "x",
order = 1,
accuracy = 2,
stepsize = NULL,
deparse = TRUE
)
y = a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a,
var = c("x1","x2",
order = 1,
accuracy = c(1,1),
stepsize = NULL,
deparse = TRUE
)
y = a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a,
var = c("x1","x2",
order = 1,
accuracy = c(1,1),
stepsize = NULL,
deparse = TRUE
)
functiona1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a
View(f1)
y = a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a,
var = c("x1","x2",
order = 1,
accuracy = c(1,1),
stepsize = NULL,
deparse = TRUE
)
View(f1)
f1 -> derivative(
y = a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a,
var = c("x1","x2",
order = 1,
accuracy = c(1,1),
stepsize = NULL,
deparse = TRUE)
# derive f once with respect to x, and twice with respect to y
derivative(f = "y^2*sin(x)", var = c("x","y"), order = c(1,2))
# derive f once with respect to x, and twice with respect to y
derivative(f = "y^2*sin(x)", var = c("x","y"), order = c(1,2))
y = "a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a",
var = c("x1","x2",
order = 1,
accuracy = c(1,1),
stepsize = NULL,
deparse = TRUE)
View(f1)
f = "a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a",
var = c("x1","x2",
order = 1,
accuracy = c(1,1),
stepsize = NULL,
deparse = TRUE)
first
f = "a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a",
var = c("x1","x2",
order = 1,
accuracy = c(1,1),
stepsize = NULL,
deparse = TRUE)
first
# derive f with respect to x
derivative(f = "sin(x)", var = "x")
# derive f twice with respect to x
derivative(f = "a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a", var = "x", order = 2)
# derive f twice with respect to x
derivative(f = "a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a", var = "x1", order = 2)
install.packages(calculus)
?library(calculus)
a1 = 6
a2 = 9
b1 = -0.2
b2 = -0.3
c1 = 0.4
a = 0
# derive f twice with respect to x
derivative(f = "a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a", var = "x1", order = 2)
install.packages(calculus)
?library(calculus)
a1 = 6
a2 = 9
b1 = -0.2
b2 = -0.3
c1 = 0.4
a = 0
# derive f twice with respect to x
f1 = derivative(f = "a1*x1 +a2*x2 + b1*x1^2 + b2*x2^2 +c1*x1*x2 + a", var = "x1", order = 2)
View(f1)
f1
# derive f twice with respect to x
f1 = "a1*x1 + a2*x2 + b1*(x1)^2 + b2*(x2)^2 +c1*x1*x2 + a"
f1
f2 = derivative(f = "f1", var = "x1", order = 2)
f2
f2 = derivative(f = "f1", var = "x1", order = 1)
f2
f2
library(calculus)
a1 = 6
a2 = 9
b1 = -0.2
b2 = -0.3
c1 = 0.4
a = 0
# derive f twice with respect to x
f1 = "a1*x1 + a2*x2 + b1*(x1)^2 + b2*(x2)^2 +c1*x1*x2 + a"
f1
View(f1)
f2 = derivative(f = "f1", var = "x1", order = 1)
f2
f2 -> derivative(f = "f1", var = "x1", order = 1)
install.packages("data.table")
install.packages("data.table")
install.packages('curl')
library(data.table)
library(curl)
library(dplyr)
mydata = fread('https://github.com/nytimes/covid-19-data/blob/master/us-counties.csv')
head(mydata)
View(mydata)
mydata = fread('https://github.com/nytimes/covid-19-data/blob/master/us-counties.csv')
head(mydata)
mydata = fread('us-counties.csv')
mydata = fread('https://github.com/nytimes/covid-19-data/blob/master/us-counties.csv')
?fread
setwd("~/Documents/GitHub/CoronaVirus")
setwd("~/Documents/GitHub/CoronaVirus")
covid19 = fread('https://github.com/nytimes/covid-19-data/blob/master/us-counties.csv')
covid19 = fread('https://www.worldometers.info/coronavirus/')
View(mydata)
covid19 = fread('https://www.worldometers.info/coronavirus/')
covid191 = fread('https://www.worldometers.info/coronavirus/')
View(covid191)
setwd("~/Documents/GitHub/CoronaVirus")
rm(covid19)
rm(covid191)
rm(f2)
rm(mydata)
setwd("~/Documents/GitHub/CoronaVirus")
getwd
wd
getwd()
